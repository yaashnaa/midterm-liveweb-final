{"ast":null,"code":"import _slicedToArray from\"/Users/yashna/Desktop/midterm-liveweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';var PREFIX='codepen-clone-';export default function useLocalStorage(key,initialValue){var prefixedKey=PREFIX+key;var _useState=useState(function(){var jsonValue=localStorage.getItem(prefixedKey);if(jsonValue!=null)return JSON.parse(jsonValue);if(typeof initialValue==='function'){return initialValue();}else{return initialValue;}}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){localStorage.setItem(prefixedKey,JSON.stringify(value));},[prefixedKey,value]);return[value,setValue];}","map":{"version":3,"sources":["/Users/yashna/Desktop/midterm-liveweb/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify"],"mappings":"4JAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,MAAM,CAAG,gBAAf,CAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8BC,YAA9B,CAA4C,CACzD,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAAGE,GAA7B,CADyD,cAG/BH,QAAQ,CAAC,UAAM,CACvC,GAAMM,CAAAA,SAAS,CAAGC,YAAY,CAACC,OAAb,CAAqBH,WAArB,CAAlB,CACA,GAAIC,SAAS,EAAI,IAAjB,CAAuB,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP,CAEvB,GAAI,MAAOF,CAAAA,YAAP,GAAwB,UAA5B,CAAwC,CACtC,MAAOA,CAAAA,YAAY,EAAnB,CACD,CAFD,IAEO,CACL,MAAOA,CAAAA,YAAP,CACD,CACF,CATiC,CAHuB,wCAGlDO,KAHkD,eAG3CC,QAH2C,eAczDb,SAAS,CAAC,UAAM,CACdQ,YAAY,CAACM,OAAb,CAAqBR,WAArB,CAAkCI,IAAI,CAACK,SAAL,CAAeH,KAAf,CAAlC,EACD,CAFQ,CAEN,CAACN,WAAD,CAAcM,KAAd,CAFM,CAAT,CAIA,MAAO,CAACA,KAAD,CAAQC,QAAR,CAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n"]},"metadata":{},"sourceType":"module"}