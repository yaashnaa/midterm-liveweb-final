{"ast":null,"code":"/**\n * React Router v6.13.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n/**\n  Not a true \"polyfill\" since we guard via the feature flag at runtime,\n  but close enough :)\n\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION]; // Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"; // Mute warnings for calls to useNavigate in SSR environments\n\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext); // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n} // Internal implementation with accept optional param for RouterProvider usage\n\n\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n\n  if (matches == null) {\n    var _dataRouterState;\n\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = null;\n\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => {\n      let children;\n\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n} // Internal version with hookName-aware debugging\n\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the ID for the nearest contextual route\n */\n\n\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\n\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n\n  return state.blockers.get(blockerKey) || blocker;\n}\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\n\n\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref; // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\n\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\n\n\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\n\n\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate(); // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\n\n\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\n\n\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\n\n\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\n\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n\n  return updates;\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, startTransitionImpl as UNSAFE_startTransitionImpl, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"sources":["../lib/polyfills/start-transition.ts","../lib/context.ts","../lib/hooks.tsx","../lib/components.tsx","../index.ts"],"names":["START_TRANSITION","React","DataRouterContext","createContext","displayName","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","useHref","to","relative","useInRouterContext","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useLayoutEffect","useNavigate","useNavigateStable","useNavigateUnstable","dataRouterContext","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","process","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","value","useParams","routeMatch","length","params","useRoutes","routes","locationArg","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","element","undefined","Component","renderedMatches","_renderMatches","Object","assign","encodeLocation","key","NavigationType","Pop","DefaultErrorComponent","error","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","console","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","props","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","children","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","id","errors","errorIndex","findIndex","m","keys","join","Math","min","reduceRight","index","concat","getChildren","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","blockerKey","useState","String","blockerFunction","args","blocker","getBlocker","useEffect","deleteBlocker","blockers","get","UseNavigateStable","fromRouteId","alreadyWarned","cond","RouterProvider","fallbackElement","future","setStateImpl","v7_startTransition","setState","newState","startTransitionImpl","subscribe","n","opts","preventScrollReset","Router","historyAction","initialized","DataRoutes","MemoryRouter","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","action","listen","Navigate","jsonPath","Outlet","Route","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","stripBasename","Routes","createRoutesFromChildren","Await","resolve","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","success","defineProperty","renderError","reject","catch","_tracked","then","AbortedDeferredError","toRender","Children","forEach","isValidElement","treePath","type","Fragment","apply","name","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","lazy","renderMatches","mapRouteProperties","updates","createElement","createMemoryRouter","createRouter","v7_prependBasename","hydrationData","initialize"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\n/**\n  Not a true \"polyfill\" since we guard via the feature flag at runtime,\n  but close enough :)\n\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nexport default React[START_TRANSITION];\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport startTransitionImpl from \"./polyfills/start-transition\";\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport startTransitionImpl from \"./lib/polyfills/start-transition\";\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n  startTransitionImpl as UNSAFE_startTransitionImpl,\n};\n"]},"metadata":{},"sourceType":"module"}