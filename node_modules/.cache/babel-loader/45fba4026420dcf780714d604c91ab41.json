{"ast":null,"code":"var _jsxFileName = \"/Users/yashna/Desktop/Llive-code-editor-test/React-CodePen-Clone/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport { socket } from \"../Socket\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { io } from \"socket.io-client\"; // Import the socket.io-client library\n\nimport Call from \"./Call\";\n\nfunction App() {\n  const [open, setOpen] = useState(true);\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [showCall, setShowCall] = useState(false);\n  useEffect(() => {\n    socket.emit(\"code-update\", {\n      html,\n      css,\n      js\n    });\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    }, 150);\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n  useEffect(() => {\n    socket.on(\"refresh-page\", () => {\n      // Refresh the page when a refresh event is received\n      window.location.reload();\n    });\n  }, []);\n  useEffect(() => {\n    if (open) {\n      // When the component is opened, get the media stream\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(currentStream => {\n        setOpen(currentStream);\n      }).catch(error => {\n        console.error(\"Error accessing media stream:\", error);\n      });\n    } else {\n      // When the component is closed, stop the media stream\n      if (open) {\n        open.getTracks().forEach(track => {\n          track.stop();\n        });\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-cont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"call-btn\",\n    onClick: () => setOpen(prevOpen => !prevOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    className: \"w-6 h-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })))), open && /*#__PURE__*/React.createElement(Call, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pane top-pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Editor, {\n    language: \"xml\",\n    displayName: \"HTML\",\n    value: html,\n    onChange: setHtml,\n    socket: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Editor, {\n    language: \"css\",\n    displayName: \"CSS\",\n    value: css,\n    onChange: setCss,\n    socket: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Editor, {\n    language: \"javascript\",\n    displayName: \"JS\",\n    value: js,\n    onChange: setJs,\n    socket: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    socket: socket,\n    srcDoc: srcDoc,\n    title: \"output\",\n    sandbox: \"allow-scripts\",\n    frameBorder: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yashna/Desktop/Llive-code-editor-test/React-CodePen-Clone/src/components/App.js"],"names":["React","useState","useEffect","Editor","socket","useLocalStorage","io","Call","App","open","setOpen","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","isConnected","setIsConnected","connected","showCall","setShowCall","emit","timeout","setTimeout","clearTimeout","on","window","location","reload","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","catch","error","console","getTracks","forEach","track","stop","prevOpen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport { socket } from \"../Socket\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { io } from \"socket.io-client\"; // Import the socket.io-client library\n\nimport Call from \"./Call\";\n\nfunction App() {\n  const [open, setOpen] = useState(true);\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(socket.connected);\n\n  const [showCall, setShowCall] = useState(false);\n  useEffect(() => {\n    socket.emit(\"code-update\", { html, css, js });\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    }, 150);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  useEffect(() => {\n    socket.on(\"refresh-page\", () => {\n      // Refresh the page when a refresh event is received\n      window.location.reload();\n    });\n  }, []);\n\n  useEffect(() => {\n    if (open) {\n      // When the component is opened, get the media stream\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((currentStream) => {\n          setOpen(currentStream);\n        })\n        .catch((error) => {\n          console.error(\"Error accessing media stream:\", error);\n        });\n    } else {\n      // When the component is closed, stop the media stream\n      if (open) {\n        open.getTracks().forEach((track) => {\n          track.stop();\n        });\n      }\n    }\n  }, [open]);\n\n  return (\n    <>\n      <div className=\"cont\">\n        <div className=\"flex-cont\">\n          <button\n            className=\"call-btn\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            <div className=\"nav\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"w-6 h-6\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z\"\n                />\n              </svg>\n            </div>\n          </button>\n          {open && <Call />}\n\n          <div className=\"pane top-pane\">\n            <Editor\n              language=\"xml\"\n              displayName=\"HTML\"\n              value={html}\n              onChange={setHtml}\n              socket={socket}\n            />\n            <Editor\n              language=\"css\"\n              displayName=\"CSS\"\n              value={css}\n              onChange={setCss}\n              socket={socket}\n            />\n            <Editor\n              language=\"javascript\"\n              displayName=\"JS\"\n              value={js}\n              onChange={setJs}\n              socket={socket}\n            />\n          </div>\n          <div className=\"pane\">\n            <iframe\n              socket={socket}\n              srcDoc={srcDoc}\n              title=\"output\"\n              sandbox=\"allow-scripts\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}