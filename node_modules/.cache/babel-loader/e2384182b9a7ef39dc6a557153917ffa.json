{"ast":null,"code":"var _jsxFileName = \"/Users/yashna/Desktop/Llive-code-editor-test/React-CodePen-Clone/src/components/Call.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VideoPlayer from \"./VideoPlayer\";\nimport Sidebar from \"./Sidebar\";\nimport Notifications from \"./Notifications\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 100px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"600px\",\n    border: \"2px solid black\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"90%\"\n    }\n  },\n  image: {\n    marginLeft: \"15px\"\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n}));\n\nconst Call = ({\n  open\n}) => {\n  const classes = useStyles();\n  const [stream, setStream] = useState(null);\n  useEffect(() => {\n    if (open) {\n      // When the component is opened, get the media stream\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(currentStream => {\n        setStream(currentStream);\n      }).catch(error => {\n        console.error(\"Error accessing media stream:\", error);\n      });\n    } else {\n      // When the component is closed, stop the media stream\n      if (stream) {\n        stream.getTracks().forEach(track => {\n          track.stop();\n        });\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Video Chat\")), open && /*#__PURE__*/React.createElement(VideoPlayer, {\n    stream: stream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Notifications, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Call;","map":{"version":3,"sources":["/Users/yashna/Desktop/Llive-code-editor-test/React-CodePen-Clone/src/components/Call.js"],"names":["React","useEffect","useState","Typography","AppBar","makeStyles","VideoPlayer","Sidebar","Notifications","useStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","width","border","breakpoints","down","image","marginLeft","wrapper","Call","open","classes","stream","setStream","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","catch","error","console","getTracks","forEach","track","stop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, AppBar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport VideoPlayer from \"./VideoPlayer\";\nimport Sidebar from \"./Sidebar\";\nimport Notifications from \"./Notifications\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 100px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"600px\",\n    border: \"2px solid black\",\n\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"90%\",\n    },\n  },\n  image: {\n    marginLeft: \"15px\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\nconst Call = ({ open }) => {\n  const classes = useStyles();\n  const [stream, setStream] = useState(null);\n\n  useEffect(() => {\n    if (open) {\n      // When the component is opened, get the media stream\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((currentStream) => {\n          setStream(currentStream);\n        })\n        .catch((error) => {\n          console.error(\"Error accessing media stream:\", error);\n        });\n    } else {\n      // When the component is closed, stop the media stream\n      if (stream) {\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      }\n    }\n  }, [open]);\n\n  return (\n    <div className={classes.wrapper}>\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography variant=\"h2\" align=\"center\">\n          Video Chat\n        </Typography>\n      </AppBar>\n      {open && <VideoPlayer stream={stream} />}\n      <Sidebar>\n        <Notifications />\n      </Sidebar>\n    </div>\n  );\n};\n\nexport default Call;\n"]},"metadata":{},"sourceType":"module"}